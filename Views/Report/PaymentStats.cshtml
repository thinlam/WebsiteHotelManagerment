@{
    ViewData["Title"] = "Thống kê thanh toán";
    var labels = (string[])ViewBag.Labels;
    var totals = (decimal[])ViewBag.Totals;
}

<div class="pl-260">
    <h3 class="my-3 text-center">Thống kê thanh toán</h3>

    <form method="get" asp-controller="Report" asp-action="PaymentStats" class="mb-3">
        <label>Chọn loại thống kê:</label>
        <select name="type" asp-items="ViewBag.TypeList" onchange="this.form.submit()" class="form-select w-auto d-inline-block mx-2"></select>
    </form>

    <canvas id="chart" width="1000" height="400"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('chart').getContext('2d');
    const chart = new Chart(ctx, {
        type: 'bar', // ← đổi từ 'line' sang 'bar'
        data: {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(labels)),
            datasets: [{
                label: 'Tổng tiền (VNĐ)',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(totals)),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(201, 203, 207, 0.2)'
                ],
                borderColor: [
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(153, 102, 255)',
                    'rgb(201, 203, 207)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            let value = context.raw;
                            return value.toLocaleString('vi-VN') + ' đ';
                        }
                    }
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function(value) {
                            return value.toLocaleString('vi-VN') + ' đ';
                        }
                    }
                }
            }
        }
    });
</script>
