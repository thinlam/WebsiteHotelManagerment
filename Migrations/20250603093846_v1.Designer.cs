// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebsiteHotelManagerment.Models;

#nullable disable

namespace WebsiteHotelManagerment.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250603093846_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.ChiTietPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DienTich")
                        .HasColumnType("int");

                    b.Property<decimal>("GiaMoiDem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhanLoai")
                        .HasColumnType("int");

                    b.Property<int?>("PhongId")
                        .HasColumnType("int");

                    b.Property<int>("SoNguoiLon")
                        .HasColumnType("int");

                    b.Property<int>("SoTreEm")
                        .HasColumnType("int");

                    b.Property<string>("TenFileAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TienNghi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDeAnh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PhongId");

                    b.ToTable("ChiTietPhongs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DienTich = 20,
                            GiaMoiDem = 500000m,
                            MoTa = "Phòng đơn nhỏ gọn",
                            PhanLoai = 0,
                            SoNguoiLon = 1,
                            SoTreEm = 0,
                            TenFileAnh = "don1.png",
                            TenPhong = "Phòng Đẹp VIP",
                            TienNghi = "Wifi, TV",
                            TieuDeAnh = "Ảnh phòng đơn 1"
                        },
                        new
                        {
                            Id = 2,
                            DienTich = 28,
                            GiaMoiDem = 700000m,
                            MoTa = "Phòng đôi thoáng mát",
                            PhanLoai = 1,
                            SoNguoiLon = 2,
                            SoTreEm = 1,
                            TenFileAnh = "doi1.png",
                            TenPhong = "Phòng Đôi 1",
                            TienNghi = "Wifi, Điều hòa",
                            TieuDeAnh = "Ảnh phòng đôi 1"
                        },
                        new
                        {
                            Id = 3,
                            DienTich = 35,
                            GiaMoiDem = 1200000m,
                            MoTa = "Phòng VIP tiện nghi cao cấp",
                            PhanLoai = 2,
                            SoNguoiLon = 3,
                            SoTreEm = 1,
                            TenFileAnh = "vip1.png",
                            TenPhong = "Phòng VIP 1",
                            TienNghi = "Wifi, Điều hòa, Bồn tắm",
                            TieuDeAnh = "Ảnh phòng VIP 1"
                        },
                        new
                        {
                            Id = 4,
                            DienTich = 22,
                            GiaMoiDem = 550000m,
                            MoTa = "Phòng đơn hiện đại",
                            PhanLoai = 0,
                            SoNguoiLon = 1,
                            SoTreEm = 0,
                            TenFileAnh = "don2.png",
                            TenPhong = "Phòng Đơn 2",
                            TienNghi = "Wifi, TV",
                            TieuDeAnh = "Ảnh phòng đơn 2"
                        },
                        new
                        {
                            Id = 5,
                            DienTich = 30,
                            GiaMoiDem = 750000m,
                            MoTa = "Phòng đôi ấm cúng",
                            PhanLoai = 1,
                            SoNguoiLon = 2,
                            SoTreEm = 1,
                            TenFileAnh = "doi2.png",
                            TenPhong = "Phòng Đôi 2",
                            TienNghi = "Wifi, Điều hòa, TV",
                            TieuDeAnh = "Ảnh phòng đôi 2"
                        },
                        new
                        {
                            Id = 6,
                            DienTich = 40,
                            GiaMoiDem = 1400000m,
                            MoTa = "Phòng VIP rộng rãi",
                            PhanLoai = 2,
                            SoNguoiLon = 4,
                            SoTreEm = 2,
                            TenFileAnh = "vip2.png",
                            TenPhong = "Phòng VIP 2",
                            TienNghi = "Wifi, Điều hòa, TV, Bồn tắm",
                            TieuDeAnh = "Ảnh phòng VIP 2"
                        },
                        new
                        {
                            Id = 7,
                            DienTich = 23,
                            GiaMoiDem = 520000m,
                            MoTa = "Phòng đơn giá rẻ",
                            PhanLoai = 0,
                            SoNguoiLon = 1,
                            SoTreEm = 1,
                            TenFileAnh = "don3.png",
                            TenPhong = "Phòng Đơn 3",
                            TienNghi = "Wifi",
                            TieuDeAnh = "Ảnh phòng đơn 3"
                        },
                        new
                        {
                            Id = 8,
                            DienTich = 29,
                            GiaMoiDem = 730000m,
                            MoTa = "Phòng đôi đơn giản",
                            PhanLoai = 1,
                            SoNguoiLon = 2,
                            SoTreEm = 0,
                            TenFileAnh = "doi3.png",
                            TenPhong = "Phòng Đôi 3",
                            TienNghi = "Wifi, Điều hòa",
                            TieuDeAnh = "Ảnh phòng đôi 3"
                        },
                        new
                        {
                            Id = 9,
                            DienTich = 38,
                            GiaMoiDem = 1350000m,
                            MoTa = "Phòng VIP sang trọng",
                            PhanLoai = 2,
                            SoNguoiLon = 3,
                            SoTreEm = 2,
                            TenFileAnh = "vip3.png",
                            TenPhong = "Phòng VIP 3",
                            TienNghi = "Wifi, Điều hòa, Bồn tắm, TV",
                            TieuDeAnh = "Ảnh phòng VIP 3"
                        },
                        new
                        {
                            Id = 10,
                            DienTich = 21,
                            GiaMoiDem = 510000m,
                            MoTa = "Phòng đơn yên tĩnh",
                            PhanLoai = 0,
                            SoNguoiLon = 1,
                            SoTreEm = 0,
                            TenFileAnh = "don4.png",
                            TenPhong = "Phòng Đơn 4",
                            TienNghi = "Wifi, TV",
                            TieuDeAnh = "Ảnh phòng đơn 4"
                        },
                        new
                        {
                            Id = 11,
                            DienTich = 32,
                            GiaMoiDem = 780000m,
                            MoTa = "Phòng đôi view đẹp",
                            PhanLoai = 1,
                            SoNguoiLon = 2,
                            SoTreEm = 2,
                            TenFileAnh = "doi4.png",
                            TenPhong = "Phòng Đôi 4",
                            TienNghi = "Wifi, TV, Điều hòa",
                            TieuDeAnh = "Ảnh phòng đôi 4"
                        },
                        new
                        {
                            Id = 12,
                            DienTich = 42,
                            GiaMoiDem = 1450000m,
                            MoTa = "Phòng VIP tiện nghi đầy đủ",
                            PhanLoai = 2,
                            SoNguoiLon = 4,
                            SoTreEm = 2,
                            TenFileAnh = "vip4.png",
                            TenPhong = "Phòng VIP 4",
                            TienNghi = "Wifi, TV, Điều hòa, Bồn tắm",
                            TieuDeAnh = "Ảnh phòng VIP 4"
                        },
                        new
                        {
                            Id = 13,
                            DienTich = 20,
                            GiaMoiDem = 490000m,
                            MoTa = "Phòng đơn nhỏ",
                            PhanLoai = 0,
                            SoNguoiLon = 1,
                            SoTreEm = 0,
                            TenFileAnh = "don5.png",
                            TenPhong = "Phòng Đơn 5",
                            TienNghi = "Wifi",
                            TieuDeAnh = "Ảnh phòng đơn 5"
                        },
                        new
                        {
                            Id = 14,
                            DienTich = 27,
                            GiaMoiDem = 710000m,
                            MoTa = "Phòng đôi sạch sẽ",
                            PhanLoai = 1,
                            SoNguoiLon = 2,
                            SoTreEm = 1,
                            TenFileAnh = "doi5.png",
                            TenPhong = "Phòng Đôi 5",
                            TienNghi = "Wifi, Điều hòa",
                            TieuDeAnh = "Ảnh phòng đôi 5"
                        },
                        new
                        {
                            Id = 15,
                            DienTich = 36,
                            GiaMoiDem = 1300000m,
                            MoTa = "Phòng VIP thoáng mát",
                            PhanLoai = 2,
                            SoNguoiLon = 3,
                            SoTreEm = 2,
                            TenFileAnh = "vip5.png",
                            TenPhong = "Phòng VIP 5",
                            TienNghi = "Wifi, Điều hòa, TV",
                            TieuDeAnh = "Ảnh phòng VIP 5"
                        },
                        new
                        {
                            Id = 16,
                            DienTich = 24,
                            GiaMoiDem = 530000m,
                            MoTa = "Phòng đơn tiện nghi",
                            PhanLoai = 0,
                            SoNguoiLon = 1,
                            SoTreEm = 1,
                            TenFileAnh = "don6.png",
                            TenPhong = "Phòng Đơn 6",
                            TienNghi = "Wifi, Điều hòa",
                            TieuDeAnh = "Ảnh phòng đơn 6"
                        },
                        new
                        {
                            Id = 17,
                            DienTich = 31,
                            GiaMoiDem = 760000m,
                            MoTa = "Phòng đôi hiện đại",
                            PhanLoai = 1,
                            SoNguoiLon = 2,
                            SoTreEm = 2,
                            TenFileAnh = "doi6.png",
                            TenPhong = "Phòng Đôi 6",
                            TienNghi = "Wifi, TV",
                            TieuDeAnh = "Ảnh phòng đôi 6"
                        },
                        new
                        {
                            Id = 18,
                            DienTich = 43,
                            GiaMoiDem = 1500000m,
                            MoTa = "Phòng VIP cao cấp",
                            PhanLoai = 2,
                            SoNguoiLon = 4,
                            SoTreEm = 1,
                            TenFileAnh = "vip6.png",
                            TenPhong = "Phòng VIP 6",
                            TienNghi = "Wifi, Điều hòa, TV, Bồn tắm",
                            TieuDeAnh = "Ảnh phòng VIP 6"
                        },
                        new
                        {
                            Id = 19,
                            DienTich = 20,
                            GiaMoiDem = 500000m,
                            MoTa = "Phòng đơn yên bình",
                            PhanLoai = 0,
                            SoNguoiLon = 1,
                            SoTreEm = 0,
                            TenFileAnh = "don7.png",
                            TenPhong = "Phòng Đơn 7",
                            TienNghi = "Wifi, TV",
                            TieuDeAnh = "Ảnh phòng đơn 7"
                        },
                        new
                        {
                            Id = 20,
                            DienTich = 29,
                            GiaMoiDem = 740000m,
                            MoTa = "Phòng đôi sạch sẽ",
                            PhanLoai = 1,
                            SoNguoiLon = 2,
                            SoTreEm = 1,
                            TenFileAnh = "doi7.png",
                            TenPhong = "Phòng Đôi 7",
                            TienNghi = "Wifi, Điều hòa",
                            TieuDeAnh = "Ảnh phòng đôi 7"
                        },
                        new
                        {
                            Id = 21,
                            DienTich = 39,
                            GiaMoiDem = 1380000m,
                            MoTa = "Phòng VIP hiện đại",
                            PhanLoai = 2,
                            SoNguoiLon = 3,
                            SoTreEm = 2,
                            TenFileAnh = "vip7.png",
                            TenPhong = "Phòng VIP 7",
                            TienNghi = "Wifi, Điều hòa, TV",
                            TieuDeAnh = "Ảnh phòng VIP 7"
                        },
                        new
                        {
                            Id = 22,
                            DienTich = 22,
                            GiaMoiDem = 520000m,
                            MoTa = "Phòng đơn tiết kiệm",
                            PhanLoai = 0,
                            SoNguoiLon = 1,
                            SoTreEm = 1,
                            TenFileAnh = "don8.png",
                            TenPhong = "Phòng Đơn 8",
                            TienNghi = "Wifi",
                            TieuDeAnh = "Ảnh phòng đơn 8"
                        },
                        new
                        {
                            Id = 23,
                            DienTich = 33,
                            GiaMoiDem = 790000m,
                            MoTa = "Phòng đôi thoải mái",
                            PhanLoai = 1,
                            SoNguoiLon = 2,
                            SoTreEm = 2,
                            TenFileAnh = "doi8.png",
                            TenPhong = "Phòng Đôi 8",
                            TienNghi = "Wifi, TV, Điều hòa",
                            TieuDeAnh = "Ảnh phòng đôi 8"
                        },
                        new
                        {
                            Id = 24,
                            DienTich = 45,
                            GiaMoiDem = 1550000m,
                            MoTa = "Phòng VIP đẳng cấp",
                            PhanLoai = 2,
                            SoNguoiLon = 4,
                            SoTreEm = 2,
                            TenFileAnh = "vip8.png",
                            TenPhong = "Phòng VIP 8",
                            TienNghi = "Wifi, TV, Điều hòa, Bồn tắm",
                            TieuDeAnh = "Ảnh phòng VIP 8"
                        },
                        new
                        {
                            Id = 25,
                            DienTich = 21,
                            GiaMoiDem = 500000m,
                            MoTa = "Phòng đơn thư giãn",
                            PhanLoai = 0,
                            SoNguoiLon = 1,
                            SoTreEm = 0,
                            TenFileAnh = "don9.png",
                            TenPhong = "Phòng Đơn 9",
                            TienNghi = "Wifi",
                            TieuDeAnh = "Ảnh phòng đơn 9"
                        },
                        new
                        {
                            Id = 26,
                            DienTich = 30,
                            GiaMoiDem = 750000m,
                            MoTa = "Phòng đôi tiện nghi",
                            PhanLoai = 1,
                            SoNguoiLon = 2,
                            SoTreEm = 1,
                            TenFileAnh = "doi9.png",
                            TenPhong = "Phòng Đôi 9",
                            TienNghi = "Wifi, TV",
                            TieuDeAnh = "Ảnh phòng đôi 9"
                        },
                        new
                        {
                            Id = 27,
                            DienTich = 41,
                            GiaMoiDem = 1450000m,
                            MoTa = "Phòng VIP ấm cúng",
                            PhanLoai = 2,
                            SoNguoiLon = 3,
                            SoTreEm = 2,
                            TenFileAnh = "vip9.png",
                            TenPhong = "Phòng VIP 9",
                            TienNghi = "Wifi, Điều hòa, Bồn tắm",
                            TieuDeAnh = "Ảnh phòng VIP 9"
                        },
                        new
                        {
                            Id = 28,
                            DienTich = 23,
                            GiaMoiDem = 510000m,
                            MoTa = "Phòng đơn tiện lợi",
                            PhanLoai = 0,
                            SoNguoiLon = 1,
                            SoTreEm = 0,
                            TenFileAnh = "don10.png",
                            TenPhong = "Phòng Đơn 10",
                            TienNghi = "Wifi, TV",
                            TieuDeAnh = "Ảnh phòng đơn 10"
                        },
                        new
                        {
                            Id = 29,
                            DienTich = 28,
                            GiaMoiDem = 720000m,
                            MoTa = "Phòng đôi phổ thông",
                            PhanLoai = 1,
                            SoNguoiLon = 2,
                            SoTreEm = 1,
                            TenFileAnh = "doi10.png",
                            TenPhong = "Phòng Đôi 10",
                            TienNghi = "Wifi, Điều hòa",
                            TieuDeAnh = "Ảnh phòng đôi 10"
                        },
                        new
                        {
                            Id = 30,
                            DienTich = 44,
                            GiaMoiDem = 1600000m,
                            MoTa = "Phòng VIP rộng và đẹp",
                            PhanLoai = 2,
                            SoNguoiLon = 4,
                            SoTreEm = 2,
                            TenFileAnh = "vip10.png",
                            TenPhong = "Phòng VIP 10",
                            TienNghi = "Wifi, TV, Bồn tắm",
                            TieuDeAnh = "Ảnh phòng VIP 10"
                        });
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.DatPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChiTietPhongId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoaiPhong")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTra")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoNguoiLon")
                        .HasColumnType("int");

                    b.Property<int>("SoTreEm")
                        .HasColumnType("int");

                    b.Property<int?>("ThanhToanId")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietPhongId");

                    b.HasIndex("ThanhToanId");

                    b.ToTable("DatPhongs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChiTietPhongId = 1,
                            Email = "a@gmail.com",
                            HoTen = "Nguyễn Văn A",
                            LoaiPhong = 1,
                            NgayDat = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8581),
                            NgayNhan = new DateTime(2025, 6, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            NgayTra = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            SoDienThoai = "0901234567",
                            SoNguoiLon = 2,
                            SoTreEm = 1,
                            TrangThai = 0
                        },
                        new
                        {
                            Id = 2,
                            ChiTietPhongId = 1,
                            Email = "b@gmail.com",
                            HoTen = "Trần Thị B",
                            LoaiPhong = 1,
                            NgayDat = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8590),
                            NgayNhan = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            NgayTra = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            SoDienThoai = "0912345678",
                            SoNguoiLon = 1,
                            SoTreEm = 0,
                            TrangThai = 1
                        },
                        new
                        {
                            Id = 3,
                            ChiTietPhongId = 1,
                            Email = "c@gmail.com",
                            HoTen = "Lê Văn C",
                            LoaiPhong = 1,
                            NgayDat = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8598),
                            NgayNhan = new DateTime(2025, 6, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            NgayTra = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            SoDienThoai = "0934567890",
                            SoNguoiLon = 2,
                            SoTreEm = 2,
                            TrangThai = 0
                        },
                        new
                        {
                            Id = 4,
                            ChiTietPhongId = 1,
                            Email = "d@gmail.com",
                            HoTen = "Phạm Thị D",
                            LoaiPhong = 0,
                            NgayDat = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8605),
                            NgayNhan = new DateTime(2025, 6, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            NgayTra = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            SoDienThoai = "0945678901",
                            SoNguoiLon = 3,
                            SoTreEm = 0,
                            TrangThai = 2
                        },
                        new
                        {
                            Id = 5,
                            ChiTietPhongId = 1,
                            Email = "e@gmail.com",
                            HoTen = "Đỗ Văn E",
                            LoaiPhong = 2,
                            NgayDat = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8612),
                            NgayNhan = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            NgayTra = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            SoDienThoai = "0956789012",
                            SoNguoiLon = 1,
                            SoTreEm = 1,
                            TrangThai = 0
                        },
                        new
                        {
                            Id = 6,
                            ChiTietPhongId = 1,
                            Email = "f@gmail.com",
                            HoTen = "Bùi Thị F",
                            LoaiPhong = 1,
                            NgayDat = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8619),
                            NgayNhan = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            NgayTra = new DateTime(2025, 6, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            SoDienThoai = "0967890123",
                            SoNguoiLon = 2,
                            SoTreEm = 1,
                            TrangThai = 1
                        },
                        new
                        {
                            Id = 7,
                            ChiTietPhongId = 1,
                            Email = "g@gmail.com",
                            HoTen = "Ngô Văn G",
                            LoaiPhong = 0,
                            NgayDat = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8627),
                            NgayNhan = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            NgayTra = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            SoDienThoai = "0978901234",
                            SoNguoiLon = 4,
                            SoTreEm = 2,
                            TrangThai = 0
                        },
                        new
                        {
                            Id = 8,
                            ChiTietPhongId = 1,
                            Email = "h@gmail.com",
                            HoTen = "Võ Thị H",
                            LoaiPhong = 2,
                            NgayDat = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8635),
                            NgayNhan = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            NgayTra = new DateTime(2025, 6, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            SoDienThoai = "0989012345",
                            SoNguoiLon = 2,
                            SoTreEm = 0,
                            TrangThai = 2
                        },
                        new
                        {
                            Id = 9,
                            ChiTietPhongId = 1,
                            Email = "i@gmail.com",
                            HoTen = "Lý Văn I",
                            LoaiPhong = 0,
                            NgayDat = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8642),
                            NgayNhan = new DateTime(2025, 6, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            NgayTra = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            SoDienThoai = "0990123456",
                            SoNguoiLon = 1,
                            SoTreEm = 1,
                            TrangThai = 1
                        },
                        new
                        {
                            Id = 10,
                            ChiTietPhongId = 1,
                            Email = "k@gmail.com",
                            HoTen = "Trịnh Thị K",
                            LoaiPhong = 1,
                            NgayDat = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8649),
                            NgayNhan = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            NgayTra = new DateTime(2025, 6, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            SoDienThoai = "0901122334",
                            SoNguoiLon = 3,
                            SoTreEm = 1,
                            TrangThai = 0
                        });
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.DichVu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DichVus");
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.LienHe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LienHes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "a@gmail.com",
                            HoTen = "Nguyễn Văn A",
                            NgayGui = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8375),
                            NoiDung = "Tôi cần hỗ trợ đặt phòng."
                        },
                        new
                        {
                            Id = 2,
                            Email = "b@gmail.com",
                            HoTen = "Trần Thị B",
                            NgayGui = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8377),
                            NoiDung = "Khách sạn có hồ bơi không?"
                        },
                        new
                        {
                            Id = 3,
                            Email = "c@gmail.com",
                            HoTen = "Lê Văn C",
                            NgayGui = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8378),
                            NoiDung = "Phòng đơn giá bao nhiêu?"
                        },
                        new
                        {
                            Id = 4,
                            Email = "d@gmail.com",
                            HoTen = "Phạm Thị D",
                            NgayGui = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8380),
                            NoiDung = "Check-in lúc mấy giờ?"
                        },
                        new
                        {
                            Id = 5,
                            Email = "e@gmail.com",
                            HoTen = "Đỗ Văn E",
                            NgayGui = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8382),
                            NoiDung = "Tôi muốn đổi lịch nhận phòng."
                        },
                        new
                        {
                            Id = 6,
                            Email = "f@gmail.com",
                            HoTen = "Bùi Thị F",
                            NgayGui = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8383),
                            NoiDung = "Có phục vụ ăn sáng không?"
                        },
                        new
                        {
                            Id = 7,
                            Email = "g@gmail.com",
                            HoTen = "Ngô Văn G",
                            NgayGui = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8385),
                            NoiDung = "Tôi muốn huỷ phòng đã đặt."
                        },
                        new
                        {
                            Id = 8,
                            Email = "h@gmail.com",
                            HoTen = "Võ Thị H",
                            NgayGui = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8387),
                            NoiDung = "Khách sạn có chỗ đậu xe không?"
                        },
                        new
                        {
                            Id = 9,
                            Email = "i@gmail.com",
                            HoTen = "Lý Văn I",
                            NgayGui = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8388),
                            NoiDung = "Tôi bị mất mật khẩu đặt phòng."
                        },
                        new
                        {
                            Id = 10,
                            Email = "k@gmail.com",
                            HoTen = "Trịnh Thị K",
                            NgayGui = new DateTime(2025, 6, 3, 16, 38, 46, 62, DateTimeKind.Local).AddTicks(8390),
                            NoiDung = "Khách sạn có dịch vụ spa không?"
                        });
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChiTietPhongId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTra")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiLon")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int>("TreEm")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietPhongId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.Phong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoaiPhong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Phongs");
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.ThanhToan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChiTietPhongId")
                        .HasColumnType("int");

                    b.Property<bool>("DaThanhToan")
                        .HasColumnType("bit");

                    b.Property<string>("HinhThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietPhongId");

                    b.ToTable("ThanhToans");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebsiteHotelManagerment.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebsiteHotelManagerment.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebsiteHotelManagerment.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebsiteHotelManagerment.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.ChiTietPhong", b =>
                {
                    b.HasOne("WebsiteHotelManagerment.Models.Phong", null)
                        .WithMany("ChiTietPhongs")
                        .HasForeignKey("PhongId");
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.DatPhong", b =>
                {
                    b.HasOne("WebsiteHotelManagerment.Models.ChiTietPhong", "ChiTietPhong")
                        .WithMany()
                        .HasForeignKey("ChiTietPhongId");

                    b.HasOne("WebsiteHotelManagerment.Models.ThanhToan", "ThanhToan")
                        .WithMany()
                        .HasForeignKey("ThanhToanId");

                    b.Navigation("ChiTietPhong");

                    b.Navigation("ThanhToan");
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.Message", b =>
                {
                    b.HasOne("WebsiteHotelManagerment.Models.ApplicationUser", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebsiteHotelManagerment.Models.ApplicationUser", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.Order", b =>
                {
                    b.HasOne("WebsiteHotelManagerment.Models.ChiTietPhong", "ChiTietPhong")
                        .WithMany()
                        .HasForeignKey("ChiTietPhongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietPhong");
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.Review", b =>
                {
                    b.HasOne("WebsiteHotelManagerment.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.ThanhToan", b =>
                {
                    b.HasOne("WebsiteHotelManagerment.Models.ChiTietPhong", "ChiTietPhong")
                        .WithMany("ThanhToans")
                        .HasForeignKey("ChiTietPhongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietPhong");
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.ChiTietPhong", b =>
                {
                    b.Navigation("ThanhToans");
                });

            modelBuilder.Entity("WebsiteHotelManagerment.Models.Phong", b =>
                {
                    b.Navigation("ChiTietPhongs");
                });
#pragma warning restore 612, 618
        }
    }
}
